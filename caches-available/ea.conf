server {
    listen *:80;

    access_log /srv/lancache/logs/ea-access.log
        http-detailed
        buffer=128k
        flush=5s;

    error_log /srv/lancache/logs/ea-error.log;

    # Set first server name, used in cache key
    server_name lancache-ea;

    # Set server name for domains Nginx should intercept
    include domains/ea.conf;

    # For all requests, proxy requests to upstream and cache
    location / {

        include includes/proxy-and-cache.conf;

        proxy_cache lancache;

        # EA's CDN blocks caching, so ignore the cache headers they send
        proxy_ignore_headers Expires Cache-Control;

        # The EA app performs many range requests on large files
        # and the range requests may be different each time a game is
        # downloaded which would cause Nginx to cache many duplicate files of
        # different sizes. Using slice causes Nnginx to request and cache
        # consistently-sized 1MB chunks of the files from EA and serve
        # the ranges requested by the The EA app.
        slice 1m;

        # Set the Range request header that is sent to the upstream server to
        # the range request that covers the request from the client
        proxy_set_header Range $slice_range;

        # Set the cache key to the (first) server name, the requested URI
        # without the query string, and the slice range
        proxy_cache_key "$server_name$uri$slice_range";

        # The various CDNs that EA use each employ a different ETag scheme
        # resulting in different ETags for the same piece of (non-modified) content
        # As a result Nginx's cached ETag may not match the client's requested ETag
        # even if the content has not been modified, which would cause the client
        # to unnecessarily re-request the content.
        # To avoid this, don't pass the ETag header to clients
        proxy_hide_header ETag;
    }
}

